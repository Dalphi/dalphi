.col-xs-12
  .card.dashboard-card
    h3.card-header
      = t('projects.dashboard-card.title')
    .card-block
      h4.card-titleo
        = t('projects.dashboard-card.services.title')
      p.card-text
        ul
          li
            = t('projects.dashboard-card.services.defined-available.title')
            ul
              - roles.each do |role|
                li.service-state-description
                    - if services[role]
                      .service-status-sign
                        = render 'services/shared/connectivity_sign',
                                 service_instance: services[role],
                                 children: nil
                      = t("enums.services.roles.#{role}")

                    - else
                      .service-status-sign
                        .connectivity-sign.not-set.no-display data-toggle='tooltip' data-placement='bottom' title="#{t('services.connectivity.not-set')}"
                          = fa_icon 'times-circle'

                      = t("enums.services.roles.#{role}")

                      - relevant_services = available_services[role.to_sym]
                      - if relevant_services && relevant_services.any?
                        = link_to t('projects.dashboard-card.services.defined-available.edit-link'), edit_project_path(project)

                      - else
                        = link_to t('projects.dashboard-card.services.defined-available.service-link'), services_path

          li
            = t('projects.dashboard-card.services.compatibility.title')
            ul
              li
                - if service_problem_ids.count == 0
                  .compatibility-status-sign.undefined
                    = fa_icon 'question-circle'
                  = t('projects.dashboard-card.services.compatibility.undefined')

                - elsif service_problem_ids.count == 1
                  .compatibility-status-sign.available
                    = fa_icon 'check-circle'
                  = t('projects.dashboard-card.services.compatibility.compatible', problem: service_problem_ids.first)

                - else
                  .compatibility-status-sign.not-set
                    = fa_icon 'exclamation-circle'
                  - problem_names = service_problem_ids.map(&:inspect).join(', ')
                  = t('projects.dashboard-card.services.compatibility.incompatible', problems: problem_names)
